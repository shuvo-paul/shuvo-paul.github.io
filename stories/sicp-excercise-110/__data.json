{"type":"data","nodes":[{"type":"data","data":[null],"uses":{}},{"type":"data","data":[{"title":1,"date":2,"content":3},"SICP(JS) Excercise 1.10 explanation","17-07-2023","\u003Cp\u003E\u003Cstrong\u003EThe following procedure computes a mathematical function called Ackermann&#39;s function.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Efunction A(x, y) {\n    return y === 0\n           ? 0\n           : x === 0\n           ? 2 * y\n           : y === 1\n           ? 2\n           : A(x - 1, A(x, y - 1));\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EWhat are the values of the following expressions?\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003EA (1, 10)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003EA(2, 4)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003EA(3, 3)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EConsider the following procedures, where A is the procedure defined above:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Efunction f(n) {\n    return A(0, n);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003Efunction g(n) {\n    return A(1, n);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003Efunction h(n) {\n    return A(2, n);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cstrong\u003ESolutions\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Cpre\u003E\u003Ccode\u003E    A(1, 10)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003E=&gt;  A(0, A(1, 9))\n=&gt;  A(0, A(0, A(1, 8)))\n\u002F\u002FThis will continue until\n=&gt;  A(0, A(0, A(0, A(0, A(0, A(0, A(0, A(0, A(0, A(1, 1))))))))))\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EWhich is a 10th level recursion.\u003C\u002Fp\u003E\n\u003Cp\u003EAt this point, the condition \u003Ccode\u003Ey === 1\u003C\u002Fcode\u003E is met because y is equal to 1. Therefore, according to the condition, the function returns 2.\u003C\u002Fp\u003E\n\u003Cp\u003ESo, we can simplify the expression \n\u003Ccode\u003E A(0, A(0, A(0, A(0, A(0, A(0, A(0, A(0, A(0, A(1, 1)))))))))) to A(0, A(0, A(0, A(0, A(0, A(0, A(0, A(0, A(0, 2)))))))))\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003ENow, we can evaluate each instance of \u003Ccode\u003EA(0, y)\u003C\u002Fcode\u003E as \u003Ccode\u003E2 * y\u003C\u002Fcode\u003E. Since we have 9 instances of A(0, y) in the expression, we can simplify it further:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EA(0, A(0, A(0, A(0, A(0, A(0, A(0, A(0, A(0, 2)))))))))\u003C\u002Fcode\u003E becomes \u003Ccode\u003E2^9 * 2\u003C\u002Fcode\u003E, which is equivalent to \u003Ccode\u003E2^10\u003C\u002Fcode\u003E, and the final result is 1024.\u003C\u002Fp\u003E\n\u003Cp\u003ETherefore, the value of \u003Ccode\u003EA(1, 10)\u003C\u002Fcode\u003E is 1024.\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Cpre\u003E\u003Ccode\u003E    A(2, 4)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003E=&gt;  A(1, A(2, 3))\n=&gt;  A(1, A(1, A(2, 2)))\n=&gt;  A(1, A(1, A(1, A(2, 1))))\n=&gt;  A(1, A(1, A(1, 2))) \u002F\u002F From third condition y === 1 ? 2\n=&gt;  A(1, A(1, 4)) \u002F\u002F From previours example we know A(1, n) =&gt; 2^n. So a A(1, 2) will be 2^2. Which is 4.\n=&gt;  A(1, 16) \u002F\u002F From previous example A(1, 4) =&gt; 2^4 =&gt; 16\n=&gt;  2^16 \u002F\u002F Previous example\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Chr\u003E\n\u003Cpre\u003E\u003Ccode\u003E    A(3, 3)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003E=&gt;  A(2, A(3, 2))\n=&gt;  A(2, A(2, A(3, 1)))\n=&gt;  A(2, A(2, 2)) \u002F\u002F Third condition y === 1 ? 2\n=&gt;  A(2, A(1, A(2, 1)))\n=&gt;  A(2, A(1, 2))\n=&gt;  A(2, 4) \u002F\u002F A(1, n) =&gt; 2^n\n=&gt;  2^16 \u002F\u002F From previous example we got A(2, 4) =&gt; 2^16\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Chr\u003E\n\u003Cpre\u003E\u003Ccode\u003E    function f(n) {\n        return A(0, n);\n    }\n\n    f(n)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003E=&gt;  A(0, n)\n=&gt;  2n \u002F\u002F x === 0 ? 2\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Chr\u003E\n\u003Cpre\u003E\u003Ccode\u003E    function g(n) {\n        return A(1, n);\n    }\n\n    g(n)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003E=&gt;  A(1, n)\n=&gt;  2^n \u002F\u002F First Problem expansion\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Chr\u003E\n\u003Cpre\u003E\u003Ccode\u003E    function h(n) {\n        return A(2, n);\n    }\n\n    h(n)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode\u003E=&gt; A(2, n)\n=&gt; 2^2^n \u002F\u002F From 2nd problem we can see A(2, 4) =&gt; 2^16 =&gt; 2^2^4\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n"],"uses":{"params":["post"]}}]}
